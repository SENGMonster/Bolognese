- content_for :head do
  :javascript
    (function($) {
      $.fn.sorted = function(customOptions) {
        var options = {
          reversed: false,
          by: function(a) { return a.text(); }
        };
        $.extend(options, customOptions);
        $data = $(this);
        arr = $data.get();
        arr.sort(function(a, b) {
          var valA = options.by($(a));
          var valB = options.by($(b));
          if (options.reversed) {
            return (valA < valB) ? 1 : (valA > valB) ? -1 : 0;        
          } else {    
            return (valA < valB) ? -1 : (valA > valB) ? 1 : 0;  
          }
        });
        return $(arr);
      };
    })(jQuery);

    // DOMContentLoaded
    $(function() {

      $category="all";

      function do_changing(){
       if ($category == 'all') {
          var $filteredData = $data.find('li');
        } else {
          var $filteredData = $data.find('li[data-type=' + $category + ']');
        }

        // if sorted by size
         if ($('#filter input[name="sort"]:checked').val() == "size") {
           var $sortedData = $filteredData.sorted({
             by: function(v) {
               return parseFloat($(v).find('span[data-type=size]').text());
             }
           });
         } else {
            //if sorted by name
           var $sortedData = $filteredData.sorted({
             by: function(v) {
               return $(v).find('strong').text().toLowerCase();
             }
           });
         }   

        // finally, call quicksand
        $applications.quicksand($sortedData, {
          duration: 800,
          easing: 'easeInOutQuad'
        });
      }

      // bind radiobuttons in the form
      var $filterType = $('#filter input[name="type"]');
      var $filterSort = $('#filter input[name="sort"]');

      $(".seminarSwitcher").click(function(){
        var rel = $(this).attr("rel");
        $category=rel;
        //var selectorstring='#filter input[value='+rel+']';
        //$formitem=$(selectorstring);
        //$('#filter input[name="type"]:checked').removeAttr("checked");
        //$formitem.prop("checked", "checked");
        do_changing();
      });

      // get the first collection
      var $applications = $('#applications');

      // clone applications to get a second collection
      var $data = $applications.clone();

      // attempt to call Quicksand on every form change
      $filterType.add($filterSort).change(function(e) {
        do_changing();
      });



    });
%h1 NLP Lifetuning Seminare

/ - @categories.each do |c|
/   .seminar_preview
/     %h2 
/       =c.name
/     %ul
/       -c.seminars.each do |s|
/         %li
/           =link_to s.title, seminar_show_path(id: s.id)


= link_to "Alle", "#", rel: 'all', class: "seminarSwitcher"
- counter = 1
-Category.all.each do |c|    
  = link_to c.name, "#", rel: c.name, class: "seminarSwitcher"
  -counter+=1

%form#filter
  / %fieldset
  /   %label
  /     %input{type: "radio", name: "type" ,value: "all" , checked: "checked"}="Alle"
  /   -Category.all.each do |c|    
  /     %label
  /       %input{type: "radio", name: "type" ,value: "#{c.name}"}=c.name
  /   .clear
  %fieldset
    %legend="Sortieren nach "
    %label
      %input{type: "radio", name: "sort" ,value: "size", checked: "checked"}="Preis"
    %label
      %input{type: "radio" ,name: "sort" ,value: "name" }="Name"

%ul#applications.image_grid
  - Seminar.all.each do |s|
    %li{:"data-id" => "id-#{s.id}", :"data-type" => s.category.name}
      %strong
        =link_to s.title, seminar_show_path(id: s.id)
      %br
      %br
      %span{:"data-type"=>"size"}
        =s.prices.first.price
    
